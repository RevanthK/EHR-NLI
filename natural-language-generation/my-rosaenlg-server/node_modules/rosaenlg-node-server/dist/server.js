#!/usr/bin/env node

"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
// import * as express from 'express';
const app_1 = require("./app");
const templates_controller_1 = __importDefault(require("./templates.controller"));
const yn_1 = __importDefault(require("yn"));
let port = 5000;
const portInEnv = process.env.ROSAENLG_PORT;
if (portInEnv) {
    const parsedPort = parseInt(portInEnv);
    if (!Number.isNaN(parsedPort)) {
        port = parsedPort;
    }
}
const app = new app_1.App([
    new templates_controller_1.default({
        templatesPath: process.env.ROSAENLG_HOMEDIR,
        s3conf: {
            bucket: process.env.AWS_S3_BUCKET,
            accessKeyId: process.env.AWS_S3_ACCESS_KEY_ID,
            secretAccessKey: process.env.AWS_S3_SECRET_ACCESS_KEY,
            endpoint: process.env.AWS_S3_ENDPOINT,
        },
        cloudwatch: {
            logGroupName: process.env.AWS_CW_LOG_GROUP_NAME,
            logStreamName: process.env.AWS_CW_LOG_STREAM_NAME,
            accessKeyId: process.env.AWS_CW_ACCESS_KEY_ID,
            secretAccessKey: process.env.AWS_CW_SECRET_ACCESS_KEY,
            region: process.env.AWS_CW_REGION,
        },
        behavior: {
            lazyStartup: process.env.ROSAENLG_LAZY_STARTUP != '' ? yn_1.default(process.env.ROSAENLG_LAZY_STARTUP) : false,
            forgetTemplates: process.env.ROSAENLG_FORGET_TEMPLATES != '' ? yn_1.default(process.env.ROSAENLG_FORGET_TEMPLATES) : false,
        },
    }),
], port);
module.exports = app.server;
//# sourceMappingURL=server.js.map