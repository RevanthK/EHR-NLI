import { RosaeContextsManager, RosaeContextsManagerParams, UserAndTemplateId } from './RosaeContextsManager';
import { PackagedTemplateWithUser, RosaeNlgFeatures } from 'rosaenlg-packager';
export interface S3Conf {
    accessKeyId: string;
    secretAccessKey: string;
    endpoint: string;
    bucket: string;
}
export declare class S3RosaeContextsManager extends RosaeContextsManager {
    private s3;
    private bucket;
    private configureS3;
    constructor(s3Conf: S3Conf, rosaeNlgFeatures: RosaeNlgFeatures, rosaeContextsManagerParams: RosaeContextsManagerParams);
    hasBackend(): boolean;
    checkHealth(cb: (err: Error) => void): void;
    getFilename(user: string, templateId: string): string;
    protected getAllFiles(cb: (err: Error, files: string[]) => void): void;
    readTemplateOnBackend(user: string, templateId: string, cb: (err: Error, templateContent: PackagedTemplateWithUser) => void): void;
    protected getUserAndTemplateId(filename: string): UserAndTemplateId;
    protected saveOnBackend(filename: string, content: string, cb: (err: Error) => void): void;
    deleteFromBackend(filename: string, cb: (err: Error) => void): void;
}
