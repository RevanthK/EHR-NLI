import { RandomManager } from './RandomManager';
import { SaveRollbackManager } from './SaveRollbackManager';
import { Languages } from './NlgLib';
export interface Asm {
    mode: 'single_sentence' | 'sentences' | 'paragraphs' | 'list';
    mix?: boolean;
    assembly: (len: number, nonEmptyElts: number[]) => Asm;
    separator?: string;
    last_separator?: string;
    if_empty?: string;
    begin_with_1?: string;
    begin_with_general?: string;
    begin_last_1?: string;
    begin_last?: string;
    end?: string;
    list_capitalize?: boolean;
    list_end_item?: string;
    list_type?: 'ul' | 'ol';
    list_intro?: string;
}
export declare class AsmManager {
    private saveRollbackManager;
    private randomManager;
    private spy;
    private language;
    setSpy(spy: Spy): void;
    constructor(language: Languages, saveRollbackManager: SaveRollbackManager, randomManager: RandomManager);
    private foreach;
    assemble(which: string, asm: Asm, size: number, params: any): void;
    private mixinIsEmpty;
    private listStuff;
    private isMixin;
    private outputStringOrMixinHelper;
    private outputStringOrMixin;
    private isDot;
    private getBeginWith;
    private listStuffSentencesHelper;
    private insertSeparatorSentences;
    private listStuffSentences;
    private insertSeparatorSingleSentence;
    private listStuffSingleSentence;
    /**
     * Mixes array in place. ES6 version
     * @param {Array} a items An array containing the items.
     * I do not use the shuffle included in random-js because I need to use my own getNextRnd function
     */
    private mix;
    getDefaultLastSeparator(): string;
}
