"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const french_determiners_1 = require("french-determiners");
const german_determiners_1 = require("german-determiners");
const italian_determiners_1 = require("italian-determiners");
const english_determiners_1 = require("english-determiners");
function getDet(lang, det, params) {
    // debug(`getDet called with: ${JSON.stringify(params)}`);
    switch (lang) {
        case 'en_US':
            return english_determiners_1.getDet(det, params.genderOwner, params.numberOwner || 'S', params.numberOwned || 'S', params.dist);
        case 'de_DE':
            return german_determiners_1.getDet(det, params.case, params.genderOwner, params.numberOwner || 'S', params.genderOwned, params.numberOwned || 'S');
        case 'fr_FR':
            return french_determiners_1.getDet(det, params.genderOwned, params.numberOwned || 'S', params.numberOwner || 'S');
        case 'it_IT':
            // istanbul ignore next
            return italian_determiners_1.getDet(det, params.genderOwned, params.numberOwned || 'S', params.dist); // || S will be tested when possessives added
        default: {
            const err = new Error();
            err.name = 'InvalidArgumentError';
            err.message = `determiners not available in ${this.language}`;
            throw err;
        }
    }
}
exports.getDet = getDet;
//# sourceMappingURL=Determiner.js.map