"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
//import * as Debug from 'debug';
//const debug = Debug("morph-it-helper");
class MorphItHelper {
    isAdj(flexform) {
        return this.getAdj(flexform) != null;
    }
    isNoun(flexform) {
        return this.getNoun(flexform) != null;
    }
    getNoun(param) {
        if (!this.nouns) {
            this.nouns = JSON.parse(fs_1.readFileSync(__dirname + '/../resources_pub/nouns.json', 'utf8'));
        }
        return this.nouns[param];
    }
    getAdj(param) {
        if (!this.adjectives) {
            this.adjectives = JSON.parse(fs_1.readFileSync(__dirname + '/../resources_pub/adjectives.json', 'utf8'));
        }
        const adjectiveInfo = this.adjectives[param];
        if (!adjectiveInfo) {
            return null;
        }
        const lemma = adjectiveInfo[0];
        const isPp = adjectiveInfo[1];
        if (isPp) {
            /*
              educato	educare	VER:part+past+s+m
              educati	educare	VER:part+past+p+m
              educata	educare	VER:part+past+s+f
            */
            if (!this.pastParticiples) {
                this.pastParticiples = JSON.parse(fs_1.readFileSync(__dirname + '/../resources_pub/pastParticiples.json', 'utf8'));
            }
            return this.pastParticiples[lemma];
        }
        else {
            // all good
            return lemma;
        }
    }
}
exports.MorphItHelper = MorphItHelper;
//# sourceMappingURL=index.js.map