import { RandomManager } from './RandomManager';
import { SaveRollbackManager } from './SaveRollbackManager';
import { DebugHolder } from 'synonym-optimizer';
import { Languages } from './NlgLib';
export interface CompleteDebug {
    maxTest: number;
    perfectScoreAfter: number;
    bestScore: number;
    bestText: string;
    bestDebug: DebugHolder;
    worstScore: number;
    worstText: string;
    worstDebug: DebugHolder;
}
export declare class ChoosebestManager {
    private language;
    private saveRollbackManager;
    private randomManager;
    private defaultAmong;
    private spy;
    setSpy(spy: Spy): void;
    constructor(language: Languages, saveRollbackManager: SaveRollbackManager, randomManager: RandomManager, defaultAmong: number);
    runChoosebest(which: string, params: {
        among: number;
        debug: boolean;
        debugRes: CompleteDebug;
        stop_words_add: string[];
        stop_words_remove: string[];
        stop_words_override: string[];
    }): void;
}
