"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class NominalGroupManager {
    constructor(language, verbsManager, valueManager, adjectiveManager) {
        this.language = language;
        this.verbsManager = verbsManager;
        this.valueManager = valueManager;
        this.adjectiveManager = adjectiveManager;
    }
    setSpy(spy) {
        this.spy = spy;
    }
    subjectVerb(subject, verbInfo, params) {
        if (params && params.invertSubjectVerb) {
            if (this.language != 'de_DE') {
                const err = new Error();
                err.name = 'InvalidArgumentError';
                err.message = `invertSubjectVerb is only valid for de_DE`;
                throw err;
            }
            if (typeof params.invertSubjectVerb !== 'boolean') {
                const err = new Error();
                err.name = 'InvalidArgumentError';
                err.message = `invertSubjectVerb must be a boolean`;
                throw err;
            }
        }
        if (params && params.invertSubjectVerb) {
            this.spy.appendPugHtml(this.verbsManager.getAgreeVerb(subject, verbInfo) + '¤');
            this.valueManager.value(subject, params);
        }
        else {
            this.valueManager.value(subject, params);
            this.spy.appendPugHtml('¤' + this.verbsManager.getAgreeVerb(subject, verbInfo));
        }
    }
    subjectVerbAdj(subject, verbInfo, adjective, params) {
        this.subjectVerb(subject, verbInfo, params);
        this.spy.appendPugHtml('¤');
        this.adjectiveManager.agreeAdj(adjective, subject, params);
    }
}
exports.NominalGroupManager = NominalGroupManager;
//# sourceMappingURL=NominalGroupManager.js.map