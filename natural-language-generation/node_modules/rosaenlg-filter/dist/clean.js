"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function joinLines(input /*, lang: string*/) {
    return input.replace(/\n|\r/g, ' ');
}
exports.joinLines = joinLines;
const constants_1 = require("./constants");
function cleanStruct(input /*, lang: string*/) {
    let res = input;
    const regexBetweenNewPara = new RegExp(`☚([${constants_1.allPunctList}\\s]+)☛`, 'g');
    res = res.replace(regexBetweenNewPara, function (match, between) {
        // console.log('<' + between + '> is removed');
        return '☚☛';
    });
    const regexOrphanDot = new RegExp(`☚([${constants_1.allPunctList}\\s]+)☚`, 'g');
    res = res.replace(regexOrphanDot, function (match, between) {
        // console.log('<' + between + '> is removed');
        return '☚☚';
    });
    const regexSpacesBeginning = new RegExp(`(\\s*)(☞[☞\\s]*)\\s+`, 'g');
    res = res.replace(regexSpacesBeginning, function (match, before, between) {
        return `${before}${between.replace(/\s/g, '')}`;
    });
    const regexSpacesEnd = new RegExp(`\\s+(☜[☜\\s]*)(\\s*)`, 'g');
    res = res.replace(regexSpacesEnd, function (match, between, after) {
        return `${between.replace(/\s/g, '')}${after}`;
    });
    return res;
}
exports.cleanStruct = cleanStruct;
function cleanStructAfterUnprotect(input /*, lang: string*/) {
    let res = input;
    const emptyParas = new RegExp(`<p>\\.</p>`, 'g');
    res = res.replace(emptyParas, '');
    return res;
}
exports.cleanStructAfterUnprotect = cleanStructAfterUnprotect;
function specialSpacesToNormalSpaces(input) {
    let res = input;
    const specialSpaces = new RegExp('¤', 'g');
    res = res.replace(specialSpaces, ' ');
    return res;
}
exports.specialSpacesToNormalSpaces = specialSpacesToNormalSpaces;
//# sourceMappingURL=clean.js.map