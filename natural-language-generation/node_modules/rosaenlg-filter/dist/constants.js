"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.allPunctList = '\\.:!\\?;,…';
exports.spaceOrNonBlockingClass = '[\\s¤☞☜]';
exports.stdBetweenWithParenthesis = `(${exports.spaceOrNonBlockingClass}+|$)`;
exports.stdBeforeWithParenthesis = `([\\s¤☛☚☞☜${exports.allPunctList}])`;
const correspondances = {
    a: 'àáâãäå',
    A: 'ÀÁÂ',
    e: 'èéêë',
    E: 'ÈÉÊË',
    i: 'ìíîï',
    I: 'ÌÍÎÏ',
    o: 'òóôõöø',
    O: 'ÒÓÔÕÖØ',
    u: 'ùúûü',
    U: 'ÙÚÛÜ',
    y: 'ÿ',
    c: 'ç',
    C: 'Ç',
    n: 'ñ',
    N: 'Ñ',
};
const voyellesSimplesMinuscules = 'aeiouy';
function getToutesVoyellesMinuscules() {
    let res = voyellesSimplesMinuscules;
    for (let i = 0; i < voyellesSimplesMinuscules.length; i++) {
        res = res + correspondances[voyellesSimplesMinuscules[i]];
    }
    return res;
}
exports.toutesVoyellesMinuscules = getToutesVoyellesMinuscules();
function getTousCaracteresMinusculesRe() {
    return 'a-z' + exports.toutesVoyellesMinuscules;
}
const toutesVoyellesMajuscules = exports.toutesVoyellesMinuscules.toUpperCase();
exports.toutesVoyellesMinMaj = exports.toutesVoyellesMinuscules + toutesVoyellesMajuscules;
const tousCaracteresMinusculesRe = getTousCaracteresMinusculesRe();
const tousCaracteresMajusculesRe = tousCaracteresMinusculesRe.toUpperCase();
exports.tousCaracteresMinMajRe = tousCaracteresMinusculesRe + tousCaracteresMajusculesRe + '\\-';
exports.toutesConsonnes = 'bcdfghjklmnpqrstvwxz';
// debug(tousCaracteresMinusculesRe);
// debug(tousCaracteresMajusculesRe);
// debug(toutesVoyellesMinMaj);
//# sourceMappingURL=constants.js.map